name: Build and Push Docker Images

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: service-discovery
            path: Service-Discovery
            port: 8761
          - name: auth-service
            path: Auth-Service
            port: 8081
          - name: finance-service
            path: Finance-Service
            port: 8082
          - name: reporting-service
            path: Reporting-Service
            port: 8083
          - name: api-gateway
            path: API-Gateway
            port: 8080

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build ${{ matrix.service.name }}
        run: |
          cd ${{ matrix.service.path }}
          mvn clean package -DskipTests

      - name: ðŸ§¹ Remove any old builders
        run: docker buildx rm builder || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service.name }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
            type=ref,event=branch
            type=ref,event=pr

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.path }}
          file: ${{ matrix.service.path }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  verify:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Verify all images
        run: |
          echo "âœ… Verifying Docker images..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/service-discovery:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/auth-service:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/finance-service:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/reporting-service:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest
          echo "âœ… All images verified successfully!"

      - name: Build summary
        run: |
          echo "### ðŸš€ Docker Images Published" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Service | Image |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| Service Discovery | \`${{ secrets.DOCKER_USERNAME }}/service-discovery:latest\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Auth Service | \`${{ secrets.DOCKER_USERNAME }}/auth-service:latest\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Finance Service | \`${{ secrets.DOCKER_USERNAME }}/finance-service:latest\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Reporting Service | \`${{ secrets.DOCKER_USERNAME }}/reporting-service:latest\` |" >> $GITHUB_STEP_SUMMARY
          echo "| API Gateway | \`${{ secrets.DOCKER_USERNAME }}/api-gateway:latest\` |" >> $GITHUB_STEP_SUMMARY