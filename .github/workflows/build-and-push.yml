name: Build and Push to Docker Hub

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: service-discovery
            path: Service-Discovery
            port: 8761
          - name: auth-service
            path: Auth-Service
            port: 8081
          - name: finance-service
            path: Finance-Service
            port: 8082
          - name: reporting-service
            path: Reporting-Service
            port: 8083

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: |
          cd ${{ matrix.service.path }}
          mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/budget-${{ matrix.service.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.path }}
          file: ${{ matrix.service.path }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/budget-${{ matrix.service.name }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/budget-${{ matrix.service.name }}:buildcache,mode=max
          build-args: |
            SERVICE_PORT=${{ matrix.service.port }}

  build-gateway:
    runs-on: ubuntu-latest
    if: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: |
          cd API-Gateway
          mvn clean package -DskipTests

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Gateway
        uses: docker/build-push-action@v5
        with:
          context: API-Gateway
          file: API-Gateway/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/budget-api-gateway:latest
            ${{ secrets.DOCKER_USERNAME }}/budget-api-gateway:${{ github.sha }}

  notify:
    needs: [build-and-push]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify on success
        if: success()
        run: echo "✅ All services built and pushed successfully!"

      - name: Notify on failure
        if: failure()
        run: echo "❌ Build or push failed!"